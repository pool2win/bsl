#lang errortrace racket/base

(require "environment.rkt"
         "bitcoin-environment.rkt"
         "eval-script.rkt")

(module+ test
  (require rackunit))


(module+ test
  (test-case
      "test bitcoin opcodes in bitcoin-environment"
    (let ([bitcoin-env (make-bitcoin-environment)])
      (let-values ([(script stack altstack verified) (apply-opcode 'op_false '() bitcoin-env '() '())])
        (check-equal? stack '(0)))
      (let-values ([(script stack altstack verified) (apply-opcode #x01 '(#"A") bitcoin-env '() '())])
        (check-equal? script '())
        (check-equal? stack  '(#"A")))
      (let-values ([(script stack altstack verified) (apply-opcode #x02 '(#"BC") bitcoin-env '() '())])
        (check-equal? script '())
        (check-equal? stack  '(#"BC")))
      (let-values ([(script stack altstack verified) (apply-opcode #x4c '(#x02 #"BC") bitcoin-env '() '())])
        (check-equal? script '())
        (check-equal? stack '(#"BC")))
      (let-values ([(script stack altstack verified) (apply-opcode #x4d '(#x0002 #"BC") bitcoin-env '() '())])
        (check-equal? script '())
        (check-equal? stack '(#"BC")))
      (let-values ([(script stack altstack verified) (apply-opcode #x4e '(#x000002 #"BC") bitcoin-env '() '())])
        (check-equal? script '())
        (check-equal? stack '(#"BC")))
      (let-values ([(script stack altstack verified) (apply-opcode #x4f '() bitcoin-env '(blah) '())])
        (check-equal? script '())
        (check-equal? stack '(-1 blah)))
      (let-values ([(script stack altstack verified) (apply-opcode #x51 '() bitcoin-env '(blah) '())])
        (check-equal? script '())
        (check-equal? stack '(1 blah)))
      (let-values ([(script stack altstack verified) (apply-opcode #x52 '() bitcoin-env '(blah) '())])
        (check-equal? script '())
        (check-equal? stack '(2 blah)))
      (let-values ([(script stack altstack verified) (apply-opcode #x60 '() bitcoin-env '(blah) '())])
        (check-equal? script '())
        (check-equal? stack '(16 blah)))
      (let-values ([(script stack altstack verified) (apply-opcode #x61 '() bitcoin-env '(blah) '())])
        (check-equal? script '())
        (check-equal? stack '(blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_if '((2 #"AA" 3 #"AAA") op_endif) bitcoin-env '(1 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(#"AAA" #"AA" blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_if '((2 #"AA" 3 #"AAA") op_endif) bitcoin-env '(0 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_if '((2 #"AA" 3 #"AAA") op_else (2 #"BB" 3 #"BBB") op_endif) bitcoin-env '(1 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(#"AAA" #"AA" blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_if '((2 #"AA" 3 #"AAA") op_else (2 #"BB" 3 #"BBB") op_endif) bitcoin-env '(0 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(#"BBB" #"BB" blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_notif '((2 #"AA" 3 #"AAA") op_endif) bitcoin-env '(0 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(#"AAA" #"AA" blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_notif '((2 #"AA" 3 #"AAA") op_endif) bitcoin-env '(1 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_notif '((2 #"AA" 3 #"AAA") op_else (2 #"BB" 3 #"BBB") op_endif) bitcoin-env '(0 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(#"AAA" #"AA" blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_notif '((2 #"AA" 3 #"AAA") op_else (2 #"BB" 3 #"BBB") op_endif) bitcoin-env '(1 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(#"BBB" #"BB" blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_if '((op_if (2 #"ZZ") op_endif) op_else (2 #"BB" 3 #"BBB") op_endif) bitcoin-env '(1 1 blah) '())])
        (check-equal? script '())
        (check-equal? stack '(#"ZZ" blah)))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_verify '() bitcoin-env '(0) '())])
          (check-equal? verified #f))
      (let-values ([(script stack altstack verified) (apply-opcode 'op_return '(#"AAA" #"BBB") bitcoin-env '(0) '())])
        (check-equal? stack '(0))
        (check-equal? script '())
        (check-equal? verified #f))
      )))
